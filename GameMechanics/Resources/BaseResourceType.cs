using Planetbase;
using UnityEngine;
using Object = UnityEngine.Object;

namespace PlanetbaseFramework.GameMechanics.Resources
{
    public class BaseResourceType : ResourceType
    {
        public Texture2D Icon { get; protected set; }
        public GameObject Model { get; protected set; }

        public BaseResourceType(Texture2D icon, GameObject model)
        {
            Icon = icon;
            Model = model;

            mIcon = loadIcon();
            mModel = loadModel();
        }

        public override Texture2D loadIcon()
        {
            return Util.applyColor(Icon, mStatsColor);
        }

        /// <summary>
        /// Provides a model for the resource type. The following assumptions are made about `Model`:
        /// * Collision geometries are added as needed
        /// * The top level object is set as inactive
        /// * The mesh of all child objects has been "smoothed", following
        ///     calculateSmoothMeshRecursive logic
        ///
        /// It is recommended that the objects provided here are generated by the
        /// ResourceModelBuilder class.
        /// </summary>
        public override GameObject loadModel()
        {
            return Object.Instantiate(Model);
        }
        public override bool hasUnpackedModel() => base.hasUnpackedModel() && mUnpackedModels.Length > 0;

        public override GameObject createModel()
        {
            var model = base.createModel();
            model.SetActive(true);
            return model;
        }
    }
}